"use strict";

const FLAGS      = require('@constants').FLAGS;
const PROPERTIES = require('@constants').PROPERTIES;

const FLAG_CURSE_COOLDOWN = 'curse_cooldown';

/**
 * Curse the character, causing them to take 50% more damage.
 *
 * @param {integer} actionWeight - The chance to perform this attack out of 100.
 * @param {integer} duration - The duration of the poison.
 * @param {string} text - The combat text to display on a successful poison attack.
 *
 * @return {Mixin}
 */
const CurseAction = (actionWeight, {
  duration = 8,
  cooldown = 8,
  text = "%s gazes deeply in your eyes and instills a deathly _curse_ in you!"
} = {}) => {
  return (Enemy) => class extends Enemy {
    constructor(info) {
      super(info);

      this.fightActionProperties.curseAttack = [
        PROPERTIES.IS_ATTACK,
        PROPERTIES.RANGED_ATTACK,
      ];
    }

    /**
     * Get the fight actions for this enemy.
     *
     * @param {Character} character - The character this enemy is fighting.
     * @param {object} actions - Actions passed in from mixed-in actions.
     *
     * @return {object}
     */
    getFightActions(character, actions = {}) {
      if ( ! this.hasFlag(FLAG_CURSE_COOLDOWN)) {
        actions.curseAttack = actionWeight;
      }

      return super.getFightActions(character, actions);
    }

    /**
     * Curse the character.
     *
     * @param {Character} character - The character being attacked.
     *
     * @return {array}
     */
    curseAttack(character) {
      character.setFlag(FLAGS.CURSED_TURNS, duration + 1);
      this.setFlag(FLAG_CURSE_COOLDOWN, cooldown);

      return [__(text, this.getDisplayName(character))];
    }

    /**
     * Perform any actions that happen after the round (decrement/clear all timers, etc)
     *
     * @param {Combatant} opponent - The current combatant's opponent.
     *
     * @return {array} Messages generated by these actions.
     */
    doPostRoundActions(opponent) {
      let messages = super.doPostRoundActions(opponent);

      if (opponent.hasFlag(FLAGS.CURSED_TURNS)) {
        messages.push(__(":curly_loop: You are _cursed,_ and take more damage."));
      }

      if (this.hasFlag(FLAG_CURSE_COOLDOWN)) {
        this.decrementFlag(FLAG_CURSE_COOLDOWN);
      }

      return messages;
    }
  };
};

module.exports = {
  CurseAction
};