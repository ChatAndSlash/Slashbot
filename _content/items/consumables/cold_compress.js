"use strict";

const { Consumable } = require('@app/content/items/consumable');

const { FLAGS } = require('@constants');

const DURATION = 6;
const HEAL_HP = 50;

class ColdCompressConsumable extends Consumable {
  constructor() {
    super({
      type: 'consumables-cold_compress',
      displayName: "Cold Compress",
      description: "A clean, sterile piece of cloth that magically maintains a cool, damp disposition and can put out any burn.",
      gold: 10,
    });
  }

  /**
   * If this consumable item can actually be used right now.
   *
   * @param Character character the character to check.
   *
   * @return boolean
   */
  canBeUsed(character) {
    return character.hasFlag(FLAGS.BURNED_TURNS);
  }

  /**
   * Consume the smelling salts, cancel the daze.
   *
   * @param Character character The character to remove poison from.
   *
   * @return string The message generated by consuming this item.
   */
  consume(character) {
    super.consume(character);

    character.clearFlag(FLAGS.BURNED_TURNS);
    character.setFlag(FLAGS.COLD_COMPRESS_TURNS, DURATION);
    const difference = character.increaseHp(HEAL_HP);

    return [`:snowflake: You apply a Cold Compress to your skin, cooling it.  You recover *${difference}* HP.`];
  }

  /**
   * Get a description of how this item will change the provided character's stats.
   *
   * @param Character character The character to evaluate against.
   *
   * @return string
   */
  getShopDescription(character) {
    return `Removes and prevent burns for ${DURATION} turns and heals ${HEAL_HP} HP.`;
  }
}

module.exports = ColdCompressConsumable;