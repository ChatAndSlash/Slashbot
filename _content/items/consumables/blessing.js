"use strict";

const Consumable = require('@app/content/items/consumable').Consumable;

const FLAGS = require('@constants').FLAGS;

const HEAL_HP = 50;

class BlessingConsumable extends Consumable {
  constructor() {
    super({
      type: 'consumables-blessing',
      displayName: __("Blessing"),
      description: __("A small pendant, tied with dried grass, glowing with a faint light.  You feel better just holding it."),
      gold: 10,
    });
  }

  /**
   * If this consumable item can actually be used right now.
   *
   * @param Character character the character to check.
   *
   * @return boolean
   */
  canBeUsed(character) {
    return character.hasFlag(FLAGS.CURSED_TURNS);
  }

  /**
   * Consume the blessing, cancel the curse.
   *
   * @param Character character The character to remove poison from.
   *
   * @return string The message generated by consuming this item.
   */
  consume(character) {
    super.consume(character);

    character.clearFlag(FLAGS.CURSED_TURNS);
    const difference = character.increaseHp(HEAL_HP);

    return [__(":star2:  A warm, bright light glow around you, removing your curse and recovering *%d* HP.", difference)];
  }

  /**
   * Get a description of how this item will change the provided character's stats.
   *
   * @param Character character The character to evaluate against.
   *
   * @return string
   */
  getShopDescription(character) {
    return __('Removes curses in combat and heals %d HP.', HEAL_HP);
  }
}

module.exports = BlessingConsumable;