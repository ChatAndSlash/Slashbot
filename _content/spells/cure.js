"use strict";

const Spell = require('@app/content/spells').Spell;

const SPELL_SCHOOLS = require('@constants').SPELL_SCHOOLS;

const HEAL_BASE = 75;

class CureSpell extends Spell {
  constructor() {
    super({
      type: 'cure',
      displayName: __('Cure'),
      mpCost: 40,
      school: SPELL_SCHOOLS.DIVINITY,
      gold: 250,
    });
  }

  /**
   * Get the description for this spell.
   *
   * @param {Character} character - The character getting the description.
   *
   * @return {array}
   */
  getDescription(character) {
    return __("Heal %d HP (%d + %d from Spell Power).", HEAL_BASE + character.spellPower, HEAL_BASE, character.spellPower);
  }

  /**
   * Heal that HP!
   *
   * @param {Character} character - The character casting the spell.
   *
   * @return {string} Message generated by casting this spell.
   */
  castIdle(character) {
    character.mp -= this.getMpCost(character);
    const hp = character.increaseHp(this.getHealAmount(character));

    return __(":sparkles: You gather your will and direct a surge of magic through your body.  (-%d MP)  You heal %d HP.", this.getMpCost(character), hp);
  }

  /**
   * Heal that HP, but in combat!
   *
   * @param {Character} character - The character casting the spell.
   *
   * @return {array}
   */
  castFighting(character) {
    character.mp -= this.getMpCost(character);
    const hp = character.increaseHp(this.getHealAmount(character));

    return [__(":sparkles: You gather your will and direct a surge of magic through your body.  (-%d MP)  You heal %d HP.", this.getMpCost(character), hp)];
  }

  /**
   * Get the amount of HP healed for, including character Spell Power.
   *
   * @param {Character} character - The character doing the healing.
   *
   * @return {integer}
   */
  getHealAmount(character) {
    return HEAL_BASE + character.spellPower;
  }
}

module.exports = CureSpell;